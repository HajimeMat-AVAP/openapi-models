openapi: 3.0.0

info:
  title: Acceptance Test
  version: 0.0.1

paths: {}

components:
  schemas:
    Test1:
      type: object
      description: Test1 object to show functionality
      required:
        - id
        - email
        - admin
        - changed
        - date
      properties:
        id:
          type: number
        email:
          type: string
        admin:
          type: boolean
        changed:
          type: string
          nullable: true
        date:
          type: string
          format: date
        dateTime:
          type: string
          format: date-time
        deleted:
          type: boolean

    Test2:
      type: object
      required:
        - ok
        - test
        - money
      properties:
        ok:
          type: boolean
        test:
          $ref: '#/components/schemas/Test1'
        money:
          $ref: '#/components/schemas/Money'
        date:
          $ref: '#/components/schemas/NullableDate'

    Test3:
      type: object
      required:
        - id
        - tests
        - inline
      properties:
        id:
          type: string
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test1'
        inline:
          type: object
          required:
            - id
          properties:
            id:
              type: string

    Test4:
      type: object
      required:
        - id
        - whichTest
      properties:
        id:
          type: string
        whichTest:
          oneOf:
            - $ref: '#/components/schemas/Test1'
            - $ref: '#/components/schemas/Test2'
        oneOfEnum:
          oneOf:
            - $ref: '#/components/schemas/Test1'
            - type: string
              enum:
                - positive
                - negative
        oneOfDate:
          oneOf:
            - $ref: '#/components/schemas/Test1'
            - type: string
              format: date

    Test5:
      allOf:
        - $ref: '#/components/schemas/Test2'
        - type: object
          required:
            - fullName
          properties:
            fullName:
              type: string

    Test6:
      type: object
      required:
        - id
        - states
      properties:
        id:
          type: string
        tests:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Test1'
              - $ref: '#/components/schemas/Test2'
        states:
          type: array
          items:
            type: string
            enum:
              - positive
              - negative
        dates:
          type: array
          items:
            type: string
            format: date

    Test7:
      type: array
      items:
        $ref: '#/components/schemas/Test1'

    Test8:
      type: array
      nullable: true
      items:
        type: string
        format: date

    Test9:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/Test1'
          - $ref: '#/components/schemas/Test2'

    NullableDate:
      type: string
      format: date
      nullable: true

    Money:
      type: integer
      format: double

  requestBodies:
    RequestBody1:
      content:
        application/json:
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
              test:
                $ref: '#/components/schemas/Test1'

  responses:
    Response1:
      description: Response1 for some request
      content:
        application/json:
          schema:
            description: Response 1 for json requests
            type: object
            required:
              - id
            properties:
              id:
                type: string
              test:
                $ref: '#/components/schemas/Test1'
              items:
                type: array
                items:
                  $ref: '#/components/schemas/Test2'
              whoKnows:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Test3'
                    - $ref: '#/components/schemas/Test4'
    Response2:
      description: Response2 for some request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Test2'
